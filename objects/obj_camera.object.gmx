<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pitch = 0;
direction = 90;
z = 32;

xsp = 0;
ysp = 0;
zsp = 0;

xcam = x;
ycam = y;
zcam = z+32;

xdir = 0;
ydir = 0;

grv = -0.05;
jmp = 2;

d3d_start();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x += xsp;
y += ysp;
z += zsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>up = -keyboard_check(ord('W'));
down = keyboard_check(ord('S'));
left = -keyboard_check(ord('A'));
right = keyboard_check(ord('D'));

space = keyboard_check(vk_space);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction -= ((display_mouse_get_x()-display_get_width()/2))/5;
pitch += ((display_mouse_get_y()-display_get_height()/2))/3;
pitch = clamp(pitch, -300, 300);

display_mouse_set(display_get_width()/2, display_get_height()/2);

xcam = x+lengthdir_x(100, direction);
ycam = y+lengthdir_y(100, direction);
zcam = z+pitch+32;

xdir = left+right;
ydir = up+down;

if (ydir == -1 &amp;&amp; xdir == 0) {
    ysp = -2*sin(degtorad(direction));
    xsp = 2*cos(degtorad(direction));
} else if (ydir == -1 &amp;&amp; xdir == -1) {
    ysp = -2*sin(degtorad(direction+45));
    xsp = 2*cos(degtorad(direction+45));
} else if (xdir == -1 &amp;&amp; ydir == 0) {
    ysp = -2*sin(degtorad(direction+90));
    xsp = 2*cos(degtorad(direction+90));
} else if (xdir == -1 &amp;&amp; ydir == 1) {
    ysp = -2*sin(degtorad(direction+135));
    xsp = 2*cos(degtorad(direction+135));
} else if (ydir == 1 &amp;&amp; xdir == 0) {
    ysp = -2*sin(degtorad(direction+180));
    xsp = 2*cos(degtorad(direction+180));
} else if (ydir == 1 &amp;&amp; xdir == 1) {
    ysp = -2*sin(degtorad(direction+225));
    xsp = 2*cos(degtorad(direction+235));
} else if (xdir == 1 &amp;&amp; ydir == 0) {
    ysp = -2*sin(degtorad(direction+270));
    xsp = 2*cos(degtorad(direction+270));
} else if (xdir == 1 &amp;&amp; ydir == -1) {
    ysp = -2*sin(degtorad(direction+315));
    xsp = 2*cos(degtorad(direction+315));
} else {
    xsp = 0;
    ysp = 0;
}

if (z != 32) {
    zsp += grv;
}

if ((z + zsp) &lt;= 32) {
    z = 32;
    zsp = 0;
}

if (z == 32 &amp;&amp; space) {
    zsp = jmp;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
draw_text(0, 0, fps);
draw_set_color(c_gray);
draw_set_alpha(0.7);
draw_ellipse(display_get_width()/2-1, display_get_height()/2-1, display_get_width()/2+1, display_get_height()/2+1, false);
draw_set_alpha(1);
draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
d3d_set_projection(x, y, z, xcam, ycam, zcam, 0, 0, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="70">
      <action>
        <libid>1</libid>
        <id>531</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_fullscreen</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
